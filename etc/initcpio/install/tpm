#!/bin/bash

# Prerequisities: TrouSerS, tpm-tools, getsecret.sh

# $1... grep pattern;  $2... file to grep
# It is assumed that $1 exists in $2
# If $1 does not yet exists in $BUILDROOT, then it is added from $2
local_add_conf() {
    touch "$BUILDROOT/$2"
    grep -q "$1" "$BUILDROOT/$2" 2>&1 >/dev/null
    result=$?
    if [[ ! $result -eq 0 ]]; then
        grep "$1" "$2" >> "$BUILDROOT/$2"
    fi
}

build() {
    # Copy the daemon incl. dependencies + config to the initrd
    add_binary /usr/bin/tcsd
    add_file   /etc/tcsd.conf
    chown tss:tss "$BUILDROOT/etc/tcsd.conf"

    # Copy the TPM configuration
    add_full_dir /var/lib/tpm
    chown -R tss:tss "$BUILDROOT/var/lib/tpm"

    # Copy the tpm tools to read the NVRAM and to read the secret
    add_binary /usr/bin/tpm_nvread
    add_binary /usr/bin/tpm_nvinfo

    # Copy extra scripts
    add_dir   /etc/tpm-secret 0700
    add_file  /etc/tpm-secret/secret.conf
    add_file  /etc/tpm-secret/tpm_getsecret.sh

    # Create tcsd user
    local_add_conf '^tss:' /etc/passwd
    local_add_conf '^tss:' /etc/group

    # Create /etc/hosts
    local_add_conf '^127.0.0.1' /etc/hosts

    # This will copy runtime /etc/initcpio/hooks/tpm to $BUILDROOT/hooks/tpm
    add_runscript

    # However, with systemd based initramfs, the runtime hooks are ignored and
    # we must execute via systemd.service file
    cat >"$BUILDROOT/usr/lib/systemd/system/tpm.service" <<EOF
[Unit]
Description=Get secret from TPM NVRAM
Before=cryptsetup-pre.target
DefaultDependencies=no

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStartPre=/usr/bin/modprobe tpm_tis
ExecStart=/hooks/tpm run_hook
EOF

    add_systemd_unit cryptsetup-pre.target
    cd "$BUILDROOT/usr/lib/systemd/system/sysinit.target.wants"
    ln -sf ../cryptsetup-pre.target cryptsetup-pre.target
    ln -sf ../tpm.service           tpm.service
}

help() {
    cat <<HELPEOF
This hook adds support for reading a key file from TPM NVRAM area, used for unlocking rootfs on LUKS encrypted drive.
In case of
* busybox init: use 'encrypt' hook and define /etc/crypttab.
* systemd init: use 'sd-encrypt' hook and define either /etc/crypttab.initramfs or rd.luks... kernel parameters
                for your bootloader.
HELPEOF
}

# vim: set ft=sh ts=4 sw=4 et:
